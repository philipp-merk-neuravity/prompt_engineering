{"task_id": "HumanEval/114", "generated_code": "def minSubArraySum(nums):\n    min_sum = current_sum = nums[0]\n    for num in nums[1:]:\n        current_sum = max(num, num + current_sum)\n        min_sum = min(min_sum, current_sum)\n    return min_sum", "prompt_tokens": 461, "completion_tokens": 347, "duration": 6.553794860839844}
{"task_id": "HumanEval/115", "generated_code": "def max_fill(grid, capacity):\n    import math\n    total_operations = 0\n    for row in grid:\n        for well in row:\n            total_operations += math.ceil(well / capacity)\n    return total_operations", "prompt_tokens": 696, "completion_tokens": 353, "duration": 6.636381149291992}
{"task_id": "HumanEval/116", "generated_code": "def sort_array(arr):\n    def custom_sort_key(num):\n        return bin(num).count('1'), num\n    return sorted(arr, key=custom_sort_key)", "prompt_tokens": 543, "completion_tokens": 299, "duration": 7.311155080795288}
{"task_id": "HumanEval/117", "generated_code": "def select_words(s, n):\n    result = []\n    words = s.split()\n    for word in words:\n        consonant_count = sum(1 for letter in word if letter.lower() not in 'aeiou')\n        if consonant_count == n:\n            result.append(word)\n    return result", "prompt_tokens": 554, "completion_tokens": 344, "duration": 6.240111589431763}
{"task_id": "HumanEval/118", "generated_code": "def get_closest_vowel(word):\n    vowels = 'aeiouAEIOU'\n    consonants = 'bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'\n    for i in range(len(word)-2, 0, -1):\n        if word[i] in consonants and word[i+1] in vowels and word[i+2] in consonants:\n            return word[i+1]\n    return ''", "prompt_tokens": 522, "completion_tokens": 369, "duration": 7.787987947463989}
{"task_id": "HumanEval/119", "generated_code": "def match_parens(lst):\n    stack = []\n    for char in ''.join(lst):\n        if char == '(': stack.append(char)\n        elif char == ')' and stack: stack.pop()\n        else: return 'No'\n    return 'Yes' if not stack else 'No'", "prompt_tokens": 541, "completion_tokens": 309, "duration": 7.743996858596802}
{"task_id": "HumanEval/120", "generated_code": "def maximum(arr, k):\n    return sorted(arr, reverse=True)[:k]", "prompt_tokens": 590, "completion_tokens": 275, "duration": 6.577053070068359}
{"task_id": "HumanEval/121", "generated_code": "def solution(lst):\n    total_sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0 and lst[i] % 2 != 0:\n            total_sum += lst[i]\n    return total_sum", "prompt_tokens": 470, "completion_tokens": 288, "duration": 5.76308536529541}
{"task_id": "HumanEval/122", "generated_code": "def add_elements(arr, k):\n    sum = 0\n    for i in range(k):\n        if 10 <= arr[i] <= 99:\n            sum += arr[i]\n    return sum", "prompt_tokens": 501, "completion_tokens": 311, "duration": 6.945780992507935}
{"task_id": "HumanEval/123", "generated_code": "def get_odd_collatz(n):\n    odd_numbers = [n]\n    while n != 1:\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            n = 3 * n + 1\n        if n % 2 != 0:\n            odd_numbers.append(n)\n    return sorted(odd_numbers)", "prompt_tokens": 604, "completion_tokens": 383, "duration": 8.433954954147339}
