{"task_id": "HumanEval/0", "tests": ["assert has_close_elements([1.0, 2.0, 3.0], 0.5) == False", "assert has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) == True", "assert has_close_elements([1.0, 2.0, 3.0, 4.0, 5.0], 0.2) == False", "assert has_close_elements([1.0, 2.0, 3.0, 4.0, 5.0], 1.5) == True"], "prompt_tokens": 1094, "completion_tokens": 540, "duration": 15.72172474861145}
{"task_id": "HumanEval/1", "tests": ["assert separate_paren_groups('()') == ['()']", "assert separate_paren_groups('( ) (( )) (( )( ))') == ['()', '(())', '(()())']", "assert separate_paren_groups('(())') == ['(())']", "assert separate_paren_groups('((()))') == ['((()))']"], "prompt_tokens": 995, "completion_tokens": 386, "duration": 11.021353721618652}
{"task_id": "HumanEval/2", "tests": ["assert truncate_number(7.0) == 0.0", "assert truncate_number(1.234) == 0.234", "assert truncate_number(10.75) == 0.75", "assert truncate_number(0.12345) == 0.12345"], "prompt_tokens": 931, "completion_tokens": 353, "duration": 15.104408979415894}
{"task_id": "HumanEval/3", "tests": ["assert below_zero([0, 0, 0, 0, 0]) == False", "assert below_zero([1, 2, 3]) == False"], "prompt_tokens": 1016, "completion_tokens": 369, "duration": 17.20871138572693}
{"task_id": "HumanEval/4", "tests": ["assert mean_absolute_deviation([-1.0, 2.0, -3.0, 4.0]) == 2.5", "assert mean_absolute_deviation([5.0, 5.0, 5.0, 5.0]) == 0.0", "assert mean_absolute_deviation([1.0, 1.0, 2.0, 2.0, 3.0, 3.0]) == 0.6666666666666666", "assert mean_absolute_deviation([1.0, 2.0, 3.0, 4.0]) == 1.0"], "prompt_tokens": 1076, "completion_tokens": 489, "duration": 19.918878316879272}
{"task_id": "HumanEval/5", "tests": ["assert intersperse([0, 0, 0, 0], 1) == [0, 1, 0, 1, 0, 1, 0]", "assert intersperse([100], 200) == [100]", "assert intersperse([5, 10, 15, 20], 0) == [5, 0, 10, 0, 15, 0, 20]", "assert intersperse([-1, -2, -3], -4) == [-1, -4, -2, -4, -3]"], "prompt_tokens": 1011, "completion_tokens": 493, "duration": 24.676510334014893}
{"task_id": "HumanEval/6", "tests": ["assert parse_nested_parens('((()))') == [3]", "assert parse_nested_parens('(()()) ((())) () ((())()())') == [2, 3, 1, 3]", "assert parse_nested_parens('()') == [1]", "assert parse_nested_parens('() ()') == [1, 1]"], "prompt_tokens": 1001, "completion_tokens": 346, "duration": 12.121227025985718}
{"task_id": "HumanEval/7", "tests": ["assert filter_by_substring(['hello', 'world', 'python'], 'o') == ['hello', 'world']", "assert filter_by_substring(['abc', 'bacd', 'cde', 'array'], 'a') == ['abc', 'bacd', 'array']", "assert filter_by_substring(['apple', 'banana', 'cherry'], 'an') == ['banana']", "assert filter_by_substring([], 'a') == []"], "prompt_tokens": 979, "completion_tokens": 409, "duration": 17.899675607681274}
{"task_id": "HumanEval/8", "tests": ["assert sum_product([5, 5, 5, 5]) == (20, 625)", "assert sum_product([2, 3, 4, 5]) == (14, 120)"], "prompt_tokens": 1011, "completion_tokens": 450, "duration": 23.726253986358643}
{"task_id": "HumanEval/9", "tests": ["assert rolling_max([2, 4, 6, 8, 10]) == [2, 4, 6, 8, 10]", "assert rolling_max([5, 4, 3, 2, 1]) == [5, 5, 5, 5, 5]", "assert rolling_max([10, 20, 15, 30, 25, 40]) == [10, 20, 20, 30, 30, 40]", "assert rolling_max([1, 2, 3, 2, 3, 4, 2]) == [1, 2, 3, 3, 3, 4, 4]"], "prompt_tokens": 1057, "completion_tokens": 575, "duration": 26.50227427482605}
{"task_id": "HumanEval/10", "tests": ["assert make_palindrome('') == ''", "assert make_palindrome('cat') == 'catac'", "assert make_palindrome('cata') == 'catac'"], "prompt_tokens": 1022, "completion_tokens": 279, "duration": 13.244797229766846}
{"task_id": "HumanEval/11", "tests": ["assert string_xor('000', '111') == '111'", "assert string_xor('010', '110') == '100'", "assert string_xor('101', '111') == '010'", "assert string_xor('001', '001') == '000'"], "prompt_tokens": 907, "completion_tokens": 341, "duration": 9.655783653259277}
{"task_id": "HumanEval/12", "tests": ["assert longest([]) == None", "assert longest(['a', 'b', 'c']) == 'a'", "assert longest(['a', 'bb', 'ccc']) == 'ccc'"], "prompt_tokens": 944, "completion_tokens": 271, "duration": 8.76639723777771}
{"task_id": "HumanEval/13", "tests": ["assert greatest_common_divisor(17, 23) == 1", "assert greatest_common_divisor(14, 28) == 14", "assert greatest_common_divisor(3, 5) == 1", "assert greatest_common_divisor(81, 27) == 27"], "prompt_tokens": 903, "completion_tokens": 356, "duration": 11.443545579910278}
{"task_id": "HumanEval/14", "tests": ["assert all_prefixes('') == []", "assert all_prefixes('hello') == ['h', 'he', 'hel', 'hell', 'hello']", "assert all_prefixes('xyz') == ['x', 'xy', 'xyz']", "assert all_prefixes('12345') == ['1', '12', '123', '1234', '12345']"], "prompt_tokens": 895, "completion_tokens": 383, "duration": 22.629647731781006}
{"task_id": "HumanEval/15", "tests": ["assert string_sequence(0) == '0'", "assert string_sequence(5) == '0 1 2 3 4 5'"], "prompt_tokens": 869, "completion_tokens": 176, "duration": 5.100540637969971}
{"task_id": "HumanEval/16", "tests": ["assert count_distinct_characters('xyzXYZ') == 3", "assert count_distinct_characters('Jerry') == 4", "assert count_distinct_characters('') == 0"], "prompt_tokens": 896, "completion_tokens": 334, "duration": 11.118769884109497}
{"task_id": "HumanEval/17", "tests": ["assert parse_music('o| o| o| o| o| o| o| o| o| o|') == [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]", "assert parse_music('o o| .| o| o| .| .| .| .| o o') == [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]", "assert parse_music('o .| o| o| o| o| o| o| o| o o') == [4, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4]", "assert parse_music('o o o o o o o o o o o') == [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]"], "prompt_tokens": 1272, "completion_tokens": 705, "duration": 29.76223611831665}
{"task_id": "HumanEval/18", "tests": ["assert how_many_times('', 'a') == 0", "assert how_many_times('aaa', 'a') == 3", "assert how_many_times('aaaa', 'aa') == 3"], "prompt_tokens": 919, "completion_tokens": 291, "duration": 9.94649887084961}
{"task_id": "HumanEval/19", "tests": ["assert sort_numbers('seven five three one') == 'one three five seven'", "assert sort_numbers('zero two four six eight') == 'zero two four six eight'", "assert sort_numbers('two five eight one four') == 'one two four five eight'", "assert sort_numbers('nine eight seven six five four three two one') == 'one two three four five six seven eight nine'"], "prompt_tokens": 991, "completion_tokens": 380, "duration": 13.096821308135986}
{"task_id": "HumanEval/20", "tests": ["assert find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]) == (2.0, 2.2)", "assert find_closest_elements([100.0, 200.0, 300.0, 400.0, 500.0, 600.0]) == (100.0, 200.0)", "assert find_closest_elements([5.5, 5.6, 5.7, 5.8, 5.9, 5.55]) == (5.55, 5.6)", "assert find_closest_elements([10.5, 20.3, 30.1, 40.7, 50.2, 60.9]) == (10.5, 20.3)"], "prompt_tokens": 1219, "completion_tokens": 647, "duration": 26.781712532043457}
{"task_id": "HumanEval/21", "tests": ["assert rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]", "assert rescale_to_unit([10.0, 20.0, 30.0, 40.0]) == [0.0, 0.3333333333333333, 0.6666666666666666, 1.0]", "assert rescale_to_unit([-1.0, 0.0, 1.0]) == [0.0, 0.5, 1.0]"], "prompt_tokens": 1153, "completion_tokens": 671, "duration": 26.647674322128296}
{"task_id": "HumanEval/22", "tests": ["assert filter_integers([1, 2, 3, 'abc', {}, []]) == [1, 2, 3]", "assert filter_integers(['string', 123, 456, '789']) == [123, 456]", "assert filter_integers(['a', 3.14, 5]) == [5]"], "prompt_tokens": 978, "completion_tokens": 436, "duration": 13.198386192321777}
{"task_id": "HumanEval/23", "tests": ["assert strlen('') == 0", "assert strlen('abc') == 3"], "prompt_tokens": 806, "completion_tokens": 133, "duration": 5.717655420303345}
{"task_id": "HumanEval/24", "tests": ["assert largest_divisor(31) == 1", "assert largest_divisor(7) == 1", "assert largest_divisor(15) == 5", "assert largest_divisor(10) == 5"], "prompt_tokens": 851, "completion_tokens": 309, "duration": 9.048461198806763}
{"task_id": "HumanEval/25", "tests": ["assert factorize(8) == [2, 2, 2]", "assert factorize(25) == [5, 5]", "assert factorize(70) == [2, 5, 7]"], "prompt_tokens": 1000, "completion_tokens": 289, "duration": 10.326054334640503}
{"task_id": "HumanEval/26", "tests": ["assert remove_duplicates([1, 2, 3, 4, 5, 1, 2, 3, 4, 5]) == []", "assert remove_duplicates([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]", "assert remove_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4]) == [1]"], "prompt_tokens": 999, "completion_tokens": 526, "duration": 24.303781270980835}
{"task_id": "HumanEval/27", "tests": ["assert flip_case('123abc') == '123ABC'", "assert flip_case('aBcDeF') == 'AbCdEf'", "assert flip_case('') == ''", "assert flip_case('WORLD') == 'world'"], "prompt_tokens": 845, "completion_tokens": 291, "duration": 16.313742876052856}
{"task_id": "HumanEval/28", "tests": ["assert concatenate(['123', '456', '789']) == '123456789'", "assert concatenate(['a', 'b', 'c']) == 'abc'", "assert concatenate([]) == ''", "assert concatenate(['apple', 'banana', 'cherry']) == 'applebananacherry'"], "prompt_tokens": 875, "completion_tokens": 343, "duration": 20.12592077255249}
{"task_id": "HumanEval/29", "tests": ["assert filter_by_prefix(['sun', 'moon', 'star', 'planet'], 's') == ['sun', 'star']", "assert filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a') == ['abc', 'array']", "assert filter_by_prefix(['alpha', 'beta', 'gamma', 'delta'], 'g') == ['gamma']", "assert filter_by_prefix(['hello', 'world', 'python', 'code'], 'p') == ['python']"], "prompt_tokens": 976, "completion_tokens": 536, "duration": 13.947445154190063}
{"task_id": "HumanEval/30", "tests": ["assert get_positive([-1, 2, -4, 5, 6]) == [2, 5, 6]"], "prompt_tokens": 1015, "completion_tokens": 300, "duration": 8.90841293334961}
{"task_id": "HumanEval/31", "tests": ["assert is_prime(6) == False", "assert is_prime(1) == False", "assert is_prime(61) == True", "assert is_prime(101) == True"], "prompt_tokens": 937, "completion_tokens": 304, "duration": 16.430811882019043}
{"task_id": "HumanEval/32", "tests": ["assert round(find_zero([1, 2]), 2) == -0.5", "assert round(find_zero([-6, 11, -6, 1]), 2) == 1.0"], "prompt_tokens": 1265, "completion_tokens": 232, "duration": 7.092032432556152}
{"task_id": "HumanEval/33", "tests": ["assert sort_third([1, 2, 3]) == [1, 2, 3]"], "prompt_tokens": 1181, "completion_tokens": 804, "duration": 32.287038803100586}
{"task_id": "HumanEval/34", "tests": ["assert unique([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]", "assert unique([]) == []", "assert unique([4, 3, 2, 1]) == [1, 2, 3, 4]", "assert unique([1, 1, 1, 1, 1]) == [1]"], "prompt_tokens": 951, "completion_tokens": 425, "duration": 11.503196716308594}
{"task_id": "HumanEval/35", "tests": ["assert max_element([0, 0, 0, 0, 0]) == 0", "assert max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]) == 123", "assert max_element([1, 2, 3]) == 3", "assert max_element([-1, -2, -3]) == -1"], "prompt_tokens": 961, "completion_tokens": 390, "duration": 20.875857830047607}
{"task_id": "HumanEval/36", "tests": ["assert fizz_buzz(50) == 0", "assert fizz_buzz(78) == 2", "assert fizz_buzz(79) == 3"], "prompt_tokens": 894, "completion_tokens": 311, "duration": 10.111970901489258}
{"task_id": "HumanEval/37", "tests": ["assert sort_even([1, 2, 3]) == [1, 2, 3]", "assert sort_even([5, 6, 3, 4]) == [3, 6, 5, 4]"], "prompt_tokens": 1067, "completion_tokens": 607, "duration": 15.987214088439941}
{"task_id": "HumanEval/38", "tests": ["assert encode_cyclic(\"a\") == \"a\"", "assert decode_cyclic(\"a\") == \"a\"", "assert encode_cyclic(\"abc\") == \"bca\""], "prompt_tokens": 1066, "completion_tokens": 423, "duration": 19.091158866882324}
{"task_id": "HumanEval/39", "tests": ["assert prime_fib(1) == 2", "assert prime_fib(2) == 3", "assert prime_fib(3) == 5", "assert prime_fib(5) == 89"], "prompt_tokens": 941, "completion_tokens": 271, "duration": 8.252288341522217}
{"task_id": "HumanEval/40", "tests": ["assert triples_sum_to_zero([1, 3, 5, 0]) == False", "assert triples_sum_to_zero([2, 4, -5, 3, 9, 7]) == True", "assert triples_sum_to_zero([1, 2, 3, 7]) == False", "assert triples_sum_to_zero([1, 3, -2, 1]) == True"], "prompt_tokens": 1107, "completion_tokens": 387, "duration": 12.151976108551025}
{"task_id": "HumanEval/41", "tests": ["assert car_race_collision(5) == 5", "assert car_race_collision(10) == 10", "assert car_race_collision(1) == 1", "assert car_race_collision(2) == 2"], "prompt_tokens": 1049, "completion_tokens": 361, "duration": 15.30541467666626}
{"task_id": "HumanEval/42", "tests": ["assert incr_list([1, 2, 3]) == [2, 3, 4]", "assert incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [6, 4, 6, 3, 4, 4, 10, 1, 124]"], "prompt_tokens": 999, "completion_tokens": 264, "duration": 59.1996111869812}
{"task_id": "HumanEval/43", "tests": ["assert pairs_sum_to_zero([1, 3, -2, 1]) == False", "assert pairs_sum_to_zero([1, 3, 5, 0]) == False", "assert pairs_sum_to_zero([2, 4, -5, 3, 5, 7]) == True", "assert pairs_sum_to_zero([1]) == False"], "prompt_tokens": 1094, "completion_tokens": 371, "duration": 22.1045982837677}
{"task_id": "HumanEval/44", "tests": ["assert change_base(8, 3) == '22'", "assert change_base(8, 2) == '1000'", "assert change_base(7, 2) == '111'"], "prompt_tokens": 925, "completion_tokens": 241, "duration": 10.809670448303223}
{"task_id": "HumanEval/45", "tests": ["assert triangle_area(4, 6) == 12.0", "assert triangle_area(5, 3) == 7.5", "assert triangle_area(10, 2) == 10.0", "assert triangle_area(7, 5) == 17.5"], "prompt_tokens": 855, "completion_tokens": 406, "duration": 12.674428224563599}
{"task_id": "HumanEval/46", "tests": ["assert fib4(5) == 4", "assert fib4(7) == 14", "assert fib4(0) == 0", "assert fib4(3) == 0"], "prompt_tokens": 1085, "completion_tokens": 340, "duration": 60.98013758659363}
{"task_id": "HumanEval/47", "tests": ["assert median([3, 1, 2, 4, 5]) == 3", "assert median([-10, 4, 6, 1000, 10, 20]) == 15.0"], "prompt_tokens": 901, "completion_tokens": 203, "duration": 6.950431823730469}
{"task_id": "HumanEval/48", "tests": ["assert is_palindrome('') == True", "assert is_palindrome('aba') == True", "assert is_palindrome('aaaaa') == True", "assert is_palindrome('zbcd') == False"], "prompt_tokens": 886, "completion_tokens": 265, "duration": 9.813234567642212}
{"task_id": "HumanEval/49", "tests": ["assert modp(1101, 101) == 2", "assert modp(100, 101) == 1", "assert modp(3, 5) == 3", "assert modp(0, 101) == 1"], "prompt_tokens": 966, "completion_tokens": 366, "duration": 12.455763339996338}
{"task_id": "HumanEval/50", "tests": ["assert encode_shift(\"abc\") == \"fgh\"", "assert decode_shift(\"ettr\") == \"zoo\"", "assert encode_shift(\"hello\") == \"mjqqt\"", "assert encode_shift(\"xyz\") == \"cde\""], "prompt_tokens": 929, "completion_tokens": 414, "duration": 13.816830396652222}
{"task_id": "HumanEval/51", "tests": ["assert remove_vowels('') == ''", "assert remove_vowels('abcdef') == 'bcdf'", "assert remove_vowels('aaaaa') == ''", "assert remove_vowels(\"abcdef\\nghijklm\") == 'bcdf\\nghjklm'"], "prompt_tokens": 1002, "completion_tokens": 363, "duration": 13.87122368812561}
{"task_id": "HumanEval/52", "tests": ["assert below_threshold([0, 0, 0], 1) == True", "assert below_threshold([-1, -2, -3], 0) == True", "assert below_threshold([5, 10, 15], 20) == True", "assert below_threshold([1, 20, 4, 10], 5) == False"], "prompt_tokens": 936, "completion_tokens": 383, "duration": 11.30079174041748}
{"task_id": "HumanEval/53", "tests": ["assert add(-5, -5) == -10", "assert add(0, 0) == 0", "assert add(2, 3) == 5", "assert add(5, 7) == 12"], "prompt_tokens": 857, "completion_tokens": 291, "duration": 7.972294569015503}
{"task_id": "HumanEval/54", "tests": ["assert same_chars('eabcdzzzz', 'dddzzzzzzzddeddabc') == True", "assert same_chars('abcd', 'dddddddabc') == True", "assert same_chars('dddddddabc', 'abcd') == True"], "prompt_tokens": 1054, "completion_tokens": 376, "duration": 59.363436698913574}
{"task_id": "HumanEval/55", "tests": ["assert fib(10) == 55", "assert fib(1) == 1", "assert fib(8) == 21"], "prompt_tokens": 834, "completion_tokens": 188, "duration": 5.649462699890137}
{"task_id": "HumanEval/56", "tests": ["assert correct_bracketing('<') == False", "assert correct_bracketing('<>') == True", "assert correct_bracketing('<<><>>') == True", "assert correct_bracketing('><<>') == False"], "prompt_tokens": 932, "completion_tokens": 287, "duration": 12.742600440979004}
{"task_id": "HumanEval/57", "tests": ["assert monotonic([1, 2, 4, 20]) == True", "assert monotonic([1, 20, 4, 10]) == False", "assert monotonic([4, 1, 0, -10]) == True"], "prompt_tokens": 931, "completion_tokens": 251, "duration": 6.807667970657349}
{"task_id": "HumanEval/58", "tests": ["assert common([1, 2, 3], [3, 4, 5]) == [3]", "assert common([5, 3, 2, 8], [3, 2]) == [2, 3]", "assert common([1, 2, 3], [4, 5, 6]) == []", "assert common([], [4, 5, 6]) == []"], "prompt_tokens": 1018, "completion_tokens": 461, "duration": 64.00179529190063}
{"task_id": "HumanEval/59", "tests": ["assert largest_prime_factor(13195) == 29", "assert largest_prime_factor(2048) == 2"], "prompt_tokens": 853, "completion_tokens": 160, "duration": 18.522472143173218}
{"task_id": "HumanEval/60", "tests": ["assert sum_to_n(30) == 465", "assert sum_to_n(10) == 55", "assert sum_to_n(5) == 15", "assert sum_to_n(100) == 5050"], "prompt_tokens": 936, "completion_tokens": 286, "duration": 15.047728776931763}
{"task_id": "HumanEval/61", "tests": ["assert correct_bracketing(\"(\") == False", "assert correct_bracketing(\"()\") == True", "assert correct_bracketing(\"(()())\") == True", "assert correct_bracketing(\")(()\") == False"], "prompt_tokens": 926, "completion_tokens": 258, "duration": 9.045093536376953}
{"task_id": "HumanEval/62", "tests": ["assert derivative([3, 1, 2, 4, 5]) == [1, 4, 12, 20]", "assert derivative([1, 2, 3]) == [2, 6]"], "prompt_tokens": 967, "completion_tokens": 218, "duration": 7.499240875244141}
{"task_id": "HumanEval/63", "tests": ["assert fibfib(2) == 1", "assert fibfib(5) == 4", "assert fibfib(3) == 1", "assert fibfib(8) == 24"], "prompt_tokens": 1041, "completion_tokens": 359, "duration": 16.262028217315674}
{"task_id": "HumanEval/64", "tests": ["assert vowels_count(\"ACEDY\") == 3", "assert vowels_count(\"hello\") == 2"], "prompt_tokens": 997, "completion_tokens": 358, "duration": 12.865619659423828}
{"task_id": "HumanEval/65", "tests": ["assert circular_shift(12345, 5) == \"12345\"", "assert circular_shift(12345, 2) == \"45123\"", "assert circular_shift(12345, 6) == \"54321\"", "assert circular_shift(12345, 3) == \"34512\""], "prompt_tokens": 927, "completion_tokens": 357, "duration": 16.99734139442444}
{"task_id": "HumanEval/66", "tests": ["assert digitSum(\"helloE\") == 69", "assert digitSum(\"woArBld\") == 131", "assert digitSum(\"abAB\") == 131", "assert digitSum(\"abcCd\") == 67"], "prompt_tokens": 973, "completion_tokens": 339, "duration": 17.171444177627563}
{"task_id": "HumanEval/67", "tests": ["assert fruit_distribution(\"5 apples and 6 oranges\", 19) == 8", "assert fruit_distribution(\"0 apples and 1 oranges\", 3) == 2", "assert fruit_distribution(\"2 apples and 3 oranges\", 100) == 95", "assert fruit_distribution(\"100 apples and 1 oranges\", 120) == 19"], "prompt_tokens": 1195, "completion_tokens": 344, "duration": 10.71112608909607}
{"task_id": "HumanEval/68", "tests": ["assert pluck([4, 2, 3]) == [2, 1]", "assert pluck([1, 2, 3]) == [2, 1]", "assert pluck([]) == []", "assert pluck([5, 0, 3, 0, 4, 2]) == [0, 1]"], "prompt_tokens": 1400, "completion_tokens": 342, "duration": 9.884436845779419}
{"task_id": "HumanEval/69", "tests": ["assert search([2, 2, 2, 2, 2, 2]) == 2", "assert search([4, 1, 2, 2, 3, 1]) == 2", "assert search([3, 3, 3, 3, 3, 3, 3]) == 3", "assert search([1, 1, 1, 1, 1]) == 1"], "prompt_tokens": 1129, "completion_tokens": 462, "duration": 17.3035888671875}
{"task_id": "HumanEval/70", "tests": ["assert strange_sort_list([10, 20, 30, 40, 50]) == [10, 50, 20, 40, 30]", "assert strange_sort_list([7, 3, 9, 1, 5]) == [1, 9, 3, 7, 5]", "assert strange_sort_list([]) == []", "assert strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]"], "prompt_tokens": 1058, "completion_tokens": 445, "duration": 14.394729137420654}
{"task_id": "HumanEval/71", "tests": ["assert triangle_area(2, 2, 5) == -1", "assert triangle_area(7, 7, 7) == 21.22", "assert triangle_area(6, 8, 10) == 24.00", "assert triangle_area(1, 2, 10) == -1"], "prompt_tokens": 1013, "completion_tokens": 399, "duration": 15.323567628860474}
{"task_id": "HumanEval/72", "tests": ["assert will_it_fly([1, 2], 5) == False", "assert will_it_fly([3, 2, 3], 1) == False", "assert will_it_fly([3, 2, 3], 9) == True", "assert will_it_fly([3], 5) == True"], "prompt_tokens": 1234, "completion_tokens": 387, "duration": 26.455100059509277}
{"task_id": "HumanEval/73", "tests": ["assert smallest_change([1, 2, 3, 4, 3, 2, 2]) == 1", "assert smallest_change([1, 2, 3, 2, 1]) == 0", "assert smallest_change([1, 2, 3, 4, 5]) == 2", "assert smallest_change([1, 1, 1, 1, 1]) == 0"], "prompt_tokens": 1111, "completion_tokens": 420, "duration": 11.649723529815674}
{"task_id": "HumanEval/74", "tests": ["assert total_match(['hi', 'admin'], ['hI', 'Hi']) == ['hI', 'Hi']", "assert total_match([], []) == []", "assert total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) == ['hI', 'hi', 'hi']", "assert total_match(['4'], ['1', '2', '3', '4', '5']) == ['4']"], "prompt_tokens": 1175, "completion_tokens": 462, "duration": 27.815978050231934}
{"task_id": "HumanEval/75", "tests": ["assert is_multiply_prime(2) == False", "assert is_multiply_prime(60) == False", "assert is_multiply_prime(6) == False", "assert is_multiply_prime(30) == True"], "prompt_tokens": 901, "completion_tokens": 391, "duration": 27.184848308563232}
{"task_id": "HumanEval/76", "tests": ["assert is_simple_power(3, 1) == False", "assert is_simple_power(8, 2) == True", "assert is_simple_power(2, 2) == True", "assert is_simple_power(5, 3) == False"], "prompt_tokens": 1039, "completion_tokens": 346, "duration": 10.632467031478882}
{"task_id": "HumanEval/77", "tests": ["assert iscube(180) == False", "assert iscube(2) == False", "assert iscube(0) == True", "assert iscube(64) == True"], "prompt_tokens": 959, "completion_tokens": 298, "duration": 10.840605974197388}
{"task_id": "HumanEval/78", "tests": ["assert hex_key(\"ABED1A33\") == 4", "assert hex_key(\"123456789ABCDEF0\") == 6", "assert hex_key(\"2020\") == 2", "assert hex_key(\"1077E\") == 2"], "prompt_tokens": 1353, "completion_tokens": 321, "duration": 14.070399284362793}
{"task_id": "HumanEval/79", "tests": ["assert decimal_to_binary(7) == \"db111db\"", "assert decimal_to_binary(32) == \"db100000db\"", "assert decimal_to_binary(0) == \"db0db\"", "assert decimal_to_binary(15) == \"db1111db\""], "prompt_tokens": 1035, "completion_tokens": 361, "duration": 10.790228366851807}
{"task_id": "HumanEval/80", "tests": ["assert is_happy(\"adb\") == True", "assert is_happy(\"xyy\") == False", "assert is_happy(\"aa\") == False", "assert is_happy(\"aabb\") == False"], "prompt_tokens": 987, "completion_tokens": 303, "duration": 15.933645009994507}
{"task_id": "HumanEval/81", "tests": ["assert numerical_letter_grade([2.5, 3.8, 1.2, 2.9, 3.3]) == ['C', 'A', 'D+', 'B', 'A-']", "assert numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]) == ['A+', 'B', 'C-', 'C', 'A-']", "assert numerical_letter_grade([2.0, 2.5, 3.0, 3.5, 4.0]) == ['C+', 'C', 'B+', 'A-', 'A+']"], "prompt_tokens": 1423, "completion_tokens": 598, "duration": 26.08306860923767}
{"task_id": "HumanEval/82", "tests": ["assert prime_length('Hello') == True", "assert prime_length('abcdcba') == True", "assert prime_length('kittens') == True", "assert prime_length('orange') == False"], "prompt_tokens": 904, "completion_tokens": 262, "duration": 15.290900707244873}
{"task_id": "HumanEval/83", "tests": [], "prompt_tokens": 835, "completion_tokens": 366, "duration": 20.868932247161865}
{"task_id": "HumanEval/84", "tests": ["assert solve(1) == \"1\"", "assert solve(150) == \"110\"", "assert solve(1000) == \"1\""], "prompt_tokens": 1006, "completion_tokens": 316, "duration": 13.443971872329712}
{"task_id": "HumanEval/85", "tests": ["assert add([1, 2, 3, 4, 5, 6, 7, 8, 9]) == 6", "assert add([1, 3, 5, 7]) == 0", "assert add([4, 2, 6, 7]) == 2"], "prompt_tokens": 900, "completion_tokens": 504, "duration": 14.745322704315186}
{"task_id": "HumanEval/86", "tests": ["assert anti_shuffle('Hi') == 'Hi'", "assert anti_shuffle('hello') == 'ehllo'"], "prompt_tokens": 1001, "completion_tokens": 286, "duration": 9.100616693496704}
{"task_id": "HumanEval/87", "tests": ["assert get_row([[1,2,3,4,5,6],[1,2,3,4,1,6],[1,2,3,4,5,1]], 1) == [(0, 0), (1, 4), (1, 0), (2, 5), (2, 0)]", "assert get_row([], 1) == []", "assert get_row([[], [1], [1, 2, 3]], 3) == [(2, 2)]"], "prompt_tokens": 1338, "completion_tokens": 386, "duration": 25.862733840942383}
{"task_id": "HumanEval/88", "tests": ["assert sort_array([]) == []", "assert sort_array([5]) == [5]", "assert sort_array([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]", "assert sort_array([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]"], "prompt_tokens": 1212, "completion_tokens": 433, "duration": 13.526123523712158}
{"task_id": "HumanEval/89", "tests": ["assert encrypt('hi') == 'lm'", "assert encrypt('asdfghjkl') == 'ewhjklnop'", "assert encrypt('gf') == 'kj'", "assert encrypt('et') == 'ix'"], "prompt_tokens": 966, "completion_tokens": 323, "duration": 9.270066261291504}
{"task_id": "HumanEval/90", "tests": ["assert next_smallest([1, 2, 3, 4, 5]) == 2", "assert next_smallest([5, 1, 4, 3, 2]) == 2", "assert next_smallest([]) == None", "assert next_smallest([1, 1]) == None"], "prompt_tokens": 1019, "completion_tokens": 321, "duration": 14.93804407119751}
{"task_id": "HumanEval/91", "tests": ["assert is_bored(\"I like coding. It's fun!\") == 1", "assert is_bored(\"I am happy. I am sad. I am confused.\") == 3", "assert is_bored(\"I am bored. I need a break!\") == 2", "assert is_bored(\"Hello world\") == 0"], "prompt_tokens": 985, "completion_tokens": 344, "duration": 10.520829916000366}
{"task_id": "HumanEval/92", "tests": ["assert any_int(5, 2, 7) == True", "assert any_int(3, 2, 2) == False", "assert any_int(3, -2, 1) == True", "assert any_int(3.6, -2.2, 2) == False"], "prompt_tokens": 1037, "completion_tokens": 356, "duration": 14.554290533065796}
{"task_id": "HumanEval/93", "tests": ["assert encode('test') == 'TGST'", "assert encode('This is a message') == 'tHKS KS C MGSSCGG'"], "prompt_tokens": 951, "completion_tokens": 204, "duration": 9.346295833587646}
{"task_id": "HumanEval/94", "tests": ["assert skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]) == 25", "assert skjkasdkd([0,8,1,2,1,7]) == 7", "assert skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]) == 13", "assert skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]) == 10"], "prompt_tokens": 1447, "completion_tokens": 604, "duration": 16.29718327522278}
{"task_id": "HumanEval/95", "tests": ["assert check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) == False", "assert check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) == True", "assert check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) == False", "assert check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) == True"], "prompt_tokens": 1121, "completion_tokens": 398, "duration": 17.837183713912964}
{"task_id": "HumanEval/96", "tests": ["assert count_up_to(11) == [2, 3, 5, 7]", "assert count_up_to(18) == [2, 3, 5, 7, 11, 13, 17]", "assert count_up_to(20) == [2, 3, 5, 7, 11, 13, 17, 19]", "assert count_up_to(0) == []"], "prompt_tokens": 1083, "completion_tokens": 417, "duration": 20.937626600265503}
{"task_id": "HumanEval/97", "tests": ["assert multiply(148, 412) == 16", "assert multiply(19, 28) == 72", "assert multiply(2020, 1851) == 0", "assert multiply(14, -15) == 20"], "prompt_tokens": 949, "completion_tokens": 321, "duration": 16.935423374176025}
{"task_id": "HumanEval/98", "tests": ["assert count_upper('dBBE') == 0", "assert count_upper('aBCdEf') == 1", "assert count_upper('abcdefg') == 0"], "prompt_tokens": 897, "completion_tokens": 334, "duration": 15.679011583328247}
{"task_id": "HumanEval/99", "tests": ["assert closest_integer(\"14.5\") == 15", "assert closest_integer(\"0\") == 0", "assert closest_integer(\"15.3\") == 15", "assert closest_integer(\"-14.5\") == -15"], "prompt_tokens": 1061, "completion_tokens": 338, "duration": 20.371813535690308}
{"task_id": "HumanEval/100", "tests": ["assert make_a_pile(4) == [4, 6, 8, 10]", "assert make_a_pile(1) == [1]", "assert make_a_pile(3) == [3, 5, 7]", "assert make_a_pile(2) == [2, 4]"], "prompt_tokens": 1033, "completion_tokens": 353, "duration": 14.731009483337402}
{"task_id": "HumanEval/101", "tests": ["assert words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]"], "prompt_tokens": 997, "completion_tokens": 271, "duration": 16.331918001174927}
{"task_id": "HumanEval/102", "tests": ["assert choose_num(2, 8) == 8", "assert choose_num(12, 15) == 14", "assert choose_num(1, 10) == 10", "assert choose_num(13, 12) == -1"], "prompt_tokens": 943, "completion_tokens": 314, "duration": 18.272188425064087}
{"task_id": "HumanEval/103", "tests": ["assert rounded_avg(1, 5) == \"0b11\"", "assert rounded_avg(7, 5) == -1", "assert rounded_avg(10, 20) == \"0b1111\""], "prompt_tokens": 1043, "completion_tokens": 341, "duration": 10.510849714279175}
{"task_id": "HumanEval/104", "tests": ["assert unique_digits([15, 33, 1422, 1]) == [1, 15, 33]", "assert unique_digits([152, 323, 1422, 10]) == []"], "prompt_tokens": 951, "completion_tokens": 196, "duration": 11.493354082107544}
{"task_id": "HumanEval/105", "tests": ["assert by_length([2, 1, 1, 4, 5, 8, 2, 3]) == [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"]", "assert by_length([]) == []", "assert by_length([1, -1, 55]) == ['One']"], "prompt_tokens": 1330, "completion_tokens": 330, "duration": 21.207736492156982}
{"task_id": "HumanEval/106", "tests": ["assert f(2) == [1, 2]", "assert f(4) == [1, 2, 6, 24]", "assert f(3) == [1, 2, 6]", "assert f(5) == [1, 2, 6, 24, 15]"], "prompt_tokens": 1017, "completion_tokens": 542, "duration": 31.111250638961792}
{"task_id": "HumanEval/107", "tests": ["assert even_odd_palindrome(3) == (1, 2)", "assert even_odd_palindrome(12) == (4, 6)"], "prompt_tokens": 1185, "completion_tokens": 481, "duration": 16.374773263931274}
{"task_id": "HumanEval/108", "tests": ["assert count_nums([1, 1, 2]) == 3", "assert count_nums([0, 0, 0]) == 0", "assert count_nums([]) == 0", "assert count_nums([-1, 11, -11]) == 1"], "prompt_tokens": 1008, "completion_tokens": 329, "duration": 11.052417278289795}
{"task_id": "HumanEval/109", "tests": ["assert move_one_ball([3, 4, 5, 1, 2]) == True", "assert move_one_ball([3, 5, 4, 1, 2]) == False", "assert move_one_ball([1, 2, 3, 4, 5]) == True", "assert move_one_ball([5, 1, 2, 3, 4]) == True"], "prompt_tokens": 1389, "completion_tokens": 393, "duration": 22.457367181777954}
{"task_id": "HumanEval/110", "tests": ["assert exchange([1, 2, 3, 4], [1, 5, 3, 4]) == \"NO\"", "assert exchange([2, 4, 6, 8], [1, 3, 5, 7]) == \"YES\"", "assert exchange([1, 2, 3, 4], [4, 3, 2, 5]) == \"YES\""], "prompt_tokens": 1217, "completion_tokens": 517, "duration": 29.232362508773804}
{"task_id": "HumanEval/111", "tests": ["assert histogram('a b b a') == {'a': 2, 'b': 2}", "assert histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}", "assert histogram('') == {}", "assert histogram('b b b b a') == {'b': 4}"], "prompt_tokens": 1074, "completion_tokens": 368, "duration": 13.768893241882324}
{"task_id": "HumanEval/112", "tests": ["assert reverse_delete(\"abcde\", \"ae\") == ('bcd', False)", "assert reverse_delete(\"abcdef\", \"b\") == ('acdef', False)", "assert reverse_delete(\"abcdedcba\", \"ab\") == ('cdedc', True)"], "prompt_tokens": 1078, "completion_tokens": 304, "duration": 18.84154486656189}
{"task_id": "HumanEval/113", "tests": ["assert odd_count(['1234567']) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]", "assert odd_count(['3','11111111']) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]"], "prompt_tokens": 1135, "completion_tokens": 295, "duration": 16.819010972976685}
{"task_id": "HumanEval/114", "tests": ["assert minSubArraySum([-1, -2, -3]) == -6", "assert minSubArraySum([0, 0, 0, 0, 0]) == 0", "assert minSubArraySum([1, 2, 3, 4, 5]) == 1"], "prompt_tokens": 969, "completion_tokens": 431, "duration": 23.73875665664673}
{"task_id": "HumanEval/115", "tests": ["assert max_fill([[0,0,1,0], [0,1,0,0], [1,1,1,1]], 1) == 6", "assert max_fill([[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]], 2) == 5", "assert max_fill([[0,0,0], [0,0,0]], 5) == 0"], "prompt_tokens": 1456, "completion_tokens": 400, "duration": 17.521931648254395}
{"task_id": "HumanEval/116", "tests": ["assert sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]", "assert sort_array([1, 0, 2, 3, 4]) == [0, 1, 2, 3, 4]"], "prompt_tokens": 1145, "completion_tokens": 425, "duration": 25.478676319122314}
{"task_id": "HumanEval/117", "tests": ["assert select_words(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]", "assert select_words(\"Uncle sam\", 3) == [\"Uncle\"]", "assert select_words(\"Mary had a little lamb\", 4) == [\"little\"]", "assert select_words(\"Hello world\", 4) == [\"world\"]"], "prompt_tokens": 1133, "completion_tokens": 362, "duration": 11.293320655822754}
{"task_id": "HumanEval/118", "tests": ["assert get_closest_vowel(\"yogurt\") == \"u\"", "assert get_closest_vowel(\"FULL\") == \"U\"", "assert get_closest_vowel(\"quick\") == \"\"", "assert get_closest_vowel(\"ab\") == \"\""], "prompt_tokens": 1051, "completion_tokens": 313, "duration": 18.9172146320343}
{"task_id": "HumanEval/119", "tests": ["assert match_parens([')', ')']) == 'No'", "assert match_parens(['()(', ')']) == 'Yes'"], "prompt_tokens": 1095, "completion_tokens": 377, "duration": 15.741588115692139}
{"task_id": "HumanEval/120", "tests": ["assert maximum([1, 2, 3, 4, 5], 5) == [1, 2, 3, 4, 5]", "assert maximum([-5, -4, -3, -2, -1], 3) == [-3, -2, -1]", "assert maximum([-3, 2, 1, 2, -1, -2, 1], 1) == [2]", "assert maximum([-3, -4, 5], 3) == [-4, -3, 5]"], "prompt_tokens": 1257, "completion_tokens": 448, "duration": 24.445496320724487}
{"task_id": "HumanEval/121", "tests": ["assert solution([3, 3, 3, 3, 3]) == 9", "assert solution([10, 11, 12, 13, 14, 15]) == 26", "assert solution([5, 8, 7, 1]) == 12", "assert solution([30, 13, 24, 321]) == 0"], "prompt_tokens": 978, "completion_tokens": 425, "duration": 17.684354782104492}
{"task_id": "HumanEval/122", "tests": ["assert add_elements([10, 20, 30, 40, 50], 5) == 150", "assert add_elements([11, 22, 33, 44, 55], 2) == 33", "assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24", "assert add_elements([100, 200, 300, 400, 500], 1) == 0"], "prompt_tokens": 1072, "completion_tokens": 470, "duration": 20.808664321899414}
{"task_id": "HumanEval/123", "tests": ["assert get_odd_collatz(1) == [1]", "assert get_odd_collatz(20) == [1, 5, 13]", "assert get_odd_collatz(100) == [1, 5, 13, 21, 27, 41, 53, 63, 81]", "assert get_odd_collatz(50) == [1, 5, 13, 21, 27]"], "prompt_tokens": 1255, "completion_tokens": 427, "duration": 17.203410148620605}
{"task_id": "HumanEval/124", "tests": ["assert valid_date('04-0-2040') == False", "assert valid_date('06/04/2020') == False", "assert valid_date('06-04-2020') == True", "assert valid_date('15-01-2012') == False"], "prompt_tokens": 1285, "completion_tokens": 371, "duration": 15.477387189865112}
{"task_id": "HumanEval/125", "tests": ["assert split_words(\"Hello\") == [\"Hello\"]", "assert split_words(\"Python is awesome\") == [\"Python\", \"is\", \"awesome\"]", "assert split_words(\"abcdef\") == 3"], "prompt_tokens": 1032, "completion_tokens": 388, "duration": 13.073189496994019}
{"task_id": "HumanEval/126", "tests": ["assert is_sorted([1, 3, 2, 4, 5, 6, 7]) == False", "assert is_sorted([1, 2, 3, 4, 5, 6]) == True", "assert is_sorted([5]) == True", "assert is_sorted([1, 2, 2, 2, 3, 4]) == False"], "prompt_tokens": 1285, "completion_tokens": 460, "duration": 12.764173746109009}
{"task_id": "HumanEval/127", "tests": ["assert intersection((2, 5), (6, 8)) == \"NO\"", "assert intersection((-1, 1), (0, 4)) == \"NO\"", "assert intersection((1, 2), (2, 3)) == \"NO\"", "assert intersection((10, 15), (12, 18)) == \"YES\""], "prompt_tokens": 1283, "completion_tokens": 432, "duration": 20.731791257858276}
{"task_id": "HumanEval/128", "tests": ["assert prod_signs([0, 1]) == 0", "assert prod_signs([5, -3, 2, 0]) == 0", "assert prod_signs([1, 2, 2, -4]) == -9"], "prompt_tokens": 1021, "completion_tokens": 434, "duration": 15.484919786453247}
{"task_id": "HumanEval/129", "tests": ["assert minPath([[1,2,3], [4,5,6], [7,8,9]], 3) == [1, 2, 1]", "assert minPath([[5,9,3], [4,1,6], [7,8,2]], 1) == [1]"], "prompt_tokens": 1563, "completion_tokens": 268, "duration": 16.388082027435303}
{"task_id": "HumanEval/130", "tests": ["assert tri(2) == [3, 1, 2]", "assert tri(1) == [3, 1]", "assert tri(3) == [3, 1, 2, 8]"], "prompt_tokens": 1239, "completion_tokens": 437, "duration": 13.542808055877686}
{"task_id": "HumanEval/131", "tests": ["assert digits(1) == 1", "assert digits(2468) == 0", "assert digits(4) == 0", "assert digits(235) == 15"], "prompt_tokens": 882, "completion_tokens": 298, "duration": 14.836284637451172}
{"task_id": "HumanEval/132", "tests": ["assert is_nested('[]') == False", "assert is_nested('[]]]]]]][[[[[]') == False", "assert is_nested('[][]') == False", "assert is_nested('[[][]]') == True"], "prompt_tokens": 1012, "completion_tokens": 317, "duration": 16.995918035507202}
{"task_id": "HumanEval/133", "tests": ["assert sum_squares([1, 4, 9]) == 98", "assert sum_squares([1, 3, 5, 7]) == 84", "assert sum_squares([1.4, 4.2, 0]) == 29"], "prompt_tokens": 1094, "completion_tokens": 540, "duration": 30.352740049362183}
{"task_id": "HumanEval/134", "tests": ["assert check_if_last_char_is_a_letter(\"\") == False", "assert check_if_last_char_is_a_letter(\"apple pi e \") == False", "assert check_if_last_char_is_a_letter(\"apple pi e\") == True", "assert check_if_last_char_is_a_letter(\"12345\") == False"], "prompt_tokens": 1036, "completion_tokens": 335, "duration": 19.98190402984619}
{"task_id": "HumanEval/135", "tests": ["assert can_arrange([1, 3, 5, 7, 6, 4, 2]) == 4", "assert can_arrange([1, 2, 3]) == -1"], "prompt_tokens": 1004, "completion_tokens": 465, "duration": 13.816346406936646}
{"task_id": "HumanEval/136", "tests": ["assert largest_smallest_integers([]) == (None, None)", "assert largest_smallest_integers([-2, -4, 1, 3, 5, 7]) == (-2, 1)", "assert largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)", "assert largest_smallest_integers([-2, -4, -1, -3, -5, -7]) == (-1, None)"], "prompt_tokens": 1085, "completion_tokens": 468, "duration": 13.258082389831543}
{"task_id": "HumanEval/137", "tests": ["assert compare_one(1, 2.5) == 2.5", "assert compare_one(1, \"2,3\") == \"2,3\"", "assert compare_one(\"5,1\", \"6\") == \"6\"", "assert compare_one(\"1\", 1) == None"], "prompt_tokens": 1046, "completion_tokens": 369, "duration": 15.395012140274048}
{"task_id": "HumanEval/138", "tests": ["assert is_equal_to_sum_even(6) == False", "assert is_equal_to_sum_even(12) == True", "assert is_equal_to_sum_even(10) == True", "assert is_equal_to_sum_even(4) == False"], "prompt_tokens": 905, "completion_tokens": 339, "duration": 10.044696807861328}
{"task_id": "HumanEval/139", "tests": ["assert special_factorial(5) == 34560", "assert special_factorial(2) == 2", "assert special_factorial(1) == 1", "assert special_factorial(4) == 288"], "prompt_tokens": 938, "completion_tokens": 306, "duration": 27.538721084594727}
{"task_id": "HumanEval/140", "tests": ["assert fix_spaces(\"Example 1\") == \"Example_1\"", "assert fix_spaces(\" Example   3\") == \"_Example-3\"", "assert fix_spaces(\"Example\") == \"Example\""], "prompt_tokens": 971, "completion_tokens": 366, "duration": 30.741865158081055}
{"task_id": "HumanEval/141", "tests": ["assert file_name_check(\"file_name.tx\") == 'No'", "assert file_name_check(\"file_name.exe\") == 'Yes'", "assert file_name_check(\"example.txt\") == 'Yes'", "assert file_name_check(\"file_name.123\") == 'No'"], "prompt_tokens": 1183, "completion_tokens": 365, "duration": 29.068179607391357}
{"task_id": "HumanEval/142", "tests": ["assert sum_squares([]) == 0", "assert sum_squares([0, 0, 0, 0, 0, 0, 0, 0, 0]) == 0", "assert sum_squares([1, 2, 3]) == 6"], "prompt_tokens": 1137, "completion_tokens": 520, "duration": 16.48499584197998}
{"task_id": "HumanEval/143", "tests": ["assert words_in_sentence(\"hello world\") == \"\"", "assert words_in_sentence(\"lets go for swimming\") == \"go for\"", "assert words_in_sentence(\"This is a test\") == \"is\""], "prompt_tokens": 1097, "completion_tokens": 473, "duration": 19.243232488632202}
{"task_id": "HumanEval/144", "tests": ["assert simplify(\"1/5\", \"5/1\") == True", "assert simplify(\"1/6\", \"2/1\") == False"], "prompt_tokens": 1058, "completion_tokens": 276, "duration": 20.333786010742188}
{"task_id": "HumanEval/145", "tests": ["assert order_by_points([9, 99, 999, 9999]) == [9, 99, 999, 9999]", "assert order_by_points([123, 456, 789]) == [123, 456, 789]", "assert order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]", "assert order_by_points([]) == []"], "prompt_tokens": 1030, "completion_tokens": 443, "duration": 15.088673114776611}
{"task_id": "HumanEval/146", "tests": ["assert specialFilter([15, -73, 14, -15]) == 1", "assert specialFilter([91, 93, 95, 97, 99]) == 5", "assert specialFilter([33, -2, -3, 45, 21, 109]) == 2", "assert specialFilter([22, 24, 26, 28, 30]) == 0"], "prompt_tokens": 1029, "completion_tokens": 406, "duration": 22.935441255569458}
{"task_id": "HumanEval/147", "tests": ["assert get_max_triples(1) == 0"], "prompt_tokens": 1081, "completion_tokens": 461, "duration": 24.482155084609985}
{"task_id": "HumanEval/148", "tests": ["assert bf(\"Venus\", \"Pluto\") == ()", "assert bf(\"Jupiter\", \"Neptune\") == (\"Saturn\", \"Uranus\")", "assert bf(\"Mercury\", \"Uranus\") == (\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\")", "assert bf(\"Pluto\", \"Mars\") == ()"], "prompt_tokens": 1200, "completion_tokens": 425, "duration": 17.02753210067749}
{"task_id": "HumanEval/149", "tests": ["assert sorted_list_sum([\"aa\", \"a\", \"aaa\"]) == [\"aa\"]", "assert sorted_list_sum([\"abc\", \"def\", \"ghi\"]) == []", "assert sorted_list_sum([\"ab\", \"a\", \"aaa\", \"cd\"]) == [\"ab\", \"cd\"]", "assert sorted_list_sum([\"cat\", \"dog\", \"rat\", \"bat\"]) == [\"bat\", \"cat\", \"dog\", \"rat\"]"], "prompt_tokens": 1161, "completion_tokens": 438, "duration": 26.745561838150024}
{"task_id": "HumanEval/150", "tests": ["assert x_or_y(15, 8, 5) == 5", "assert x_or_y(3, -10, -20) == -10", "assert x_or_y(2, 100, 200) == 100", "assert x_or_y(11, 0, 1) == 0"], "prompt_tokens": 943, "completion_tokens": 334, "duration": 12.736165046691895}
{"task_id": "HumanEval/151", "tests": ["assert double_the_difference([-1, -2, 0]) == 0", "assert double_the_difference([]) == 0", "assert double_the_difference([9, -2]) == 81", "assert double_the_difference([0]) == 0"], "prompt_tokens": 1029, "completion_tokens": 342, "duration": 14.927554607391357}
{"task_id": "HumanEval/152", "tests": ["assert compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) == [0,0,0,0,3,3]", "assert compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) == [4,4,1,0,0,6]"], "prompt_tokens": 1245, "completion_tokens": 267, "duration": 16.644259929656982}
{"task_id": "HumanEval/153", "tests": ["assert Strongest_Extension('test', ['TEST', 'test', 'tEsT']) == 'test.TEST'"], "prompt_tokens": 1365, "completion_tokens": 523, "duration": 20.826701879501343}
{"task_id": "HumanEval/154", "tests": ["assert cycpattern_check(\"hello\", \"ell\") == True", "assert cycpattern_check(\"whassup\", \"psus\") == False", "assert cycpattern_check(\"abcd\", \"abd\") == False"], "prompt_tokens": 1018, "completion_tokens": 429, "duration": 13.322472333908081}
{"task_id": "HumanEval/155", "tests": ["assert even_odd_count(123) == (1, 2)", "assert even_odd_count(-12) == (1, 1)", "assert even_odd_count(13579) == (0, 5)", "assert even_odd_count(2468) == (4, 0)"], "prompt_tokens": 891, "completion_tokens": 357, "duration": 14.491211891174316}
{"task_id": "HumanEval/156", "tests": ["assert int_to_mini_roman(1) == 'i'", "assert int_to_mini_roman(99) == 'xcix'", "assert int_to_mini_roman(999) == 'cmxcix'", "assert int_to_mini_roman(500) == 'd'"], "prompt_tokens": 960, "completion_tokens": 355, "duration": 13.362050533294678}
{"task_id": "HumanEval/157", "tests": ["assert right_angle_triangle(5, 12, 13) == True", "assert right_angle_triangle(8, 15, 17) == True", "assert right_angle_triangle(7, 24, 25) == True", "assert right_angle_triangle(3, 4, 5) == True"], "prompt_tokens": 983, "completion_tokens": 417, "duration": 16.77405047416687}
{"task_id": "HumanEval/158", "tests": ["assert find_max([\"name\", \"of\", \"string\"]) == \"string\""], "prompt_tokens": 995, "completion_tokens": 405, "duration": 12.699164152145386}
{"task_id": "HumanEval/159", "tests": ["assert eat(1, 10, 10) == [11, 0]", "assert eat(2, 11, 5) == [7, 0]", "assert eat(1000, 1000, 1000) == [2000, 0]", "assert eat(0, 0, 0) == [0, 0]"], "prompt_tokens": 1333, "completion_tokens": 473, "duration": 19.853843688964844}
{"task_id": "HumanEval/160", "tests": ["assert do_algebra(['-', '+', '*'], [5, 3, 2, 4]) == 3", "assert do_algebra(['//', '+', '*'], [10, 2, 3, 4]) == 17", "assert do_algebra(['+', '*', '-'], [2, 3, 4, 5]) == 9"], "prompt_tokens": 1224, "completion_tokens": 516, "duration": 16.14163827896118}
{"task_id": "HumanEval/161", "tests": ["assert solve(\"1234\") == \"4321\"", "assert solve(\"ab\") == \"AB\"", "assert solve(\"ABC\") == \"cba\"", "assert solve(\"aBcDeF\") == \"AbCdEf\""], "prompt_tokens": 961, "completion_tokens": 289, "duration": 13.738357067108154}
{"task_id": "HumanEval/162", "tests": ["assert string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'", "assert string_to_md5('') == None"], "prompt_tokens": 895, "completion_tokens": 171, "duration": 16.517460107803345}
{"task_id": "HumanEval/163", "tests": ["assert generate_integers(2, 8) == [2, 4, 6, 8]", "assert generate_integers(8, 2) == [2, 4, 6, 8]"], "prompt_tokens": 969, "completion_tokens": 291, "duration": 14.2518630027771}
